{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        
    "VMname": {
        "type": "string",
        "metadata": {
            "description": "description"
        }
    },
    "OSusername": {
        "type": "string",
        "metadata": {
            "description": "description"
        }
    },

    "OSpassword": {
        "type": "securestring",
        "metadata": {
            "description": "description"
        }
    },
    "VMcount": {
        "type": "int",
        "metadata": {
            "description": "description"
        }
    },
    "VMsize": {
        "type": "string",
        "metadata": {
            "description": "description"
        },
        "allowedValues": [
            "Standard_A2_v2"
        ]
    },
    "StorageSKU": {
        "type": "string",
        "metadata": {
            "description": "description"
        },
        "allowedValues":[
            "Standard_LRS",
            "Premium_LRS"
        ]
    }

    
    },
    "functions": [],
    "variables": {
        "VNET": "[concat(parameters('VMname'),'-vnet')]",
        "Backend": "[concat(variables('VNET'),'-Backend')]",
        "Frontend": "[concat(variables('VNET'),'-Frontend')]",
        "bkendNIC": "[concat(parameters('VMname'),'-bknic')]",
        "frntendNIC": "[concat(parameters('VMname'),'-frntnic')]",
        "PIP": "[concat(parameters('VMname'),'-pip')]",
        "SAname": "[tolower(concat(parameters('VMname'),'sa'))]",
        "FrontendNSG": "[concat(variables('VNET'),'-Frontend-nsg')]",
        "BackendNSG": "[concat(variables('VNET'),'-Backend-nsg')]"
    },
    "resources": [
        {
        "name": "[variables('SAname')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "[variables('SAname')]"
        },
        "sku": {
            "name": "[parameters('StorageSKU')]"
        },
        "kind": "Storage"
    },
    
            {
        "name": "[concat(variables('PIP'),'-',copyIndex())]",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "tags": {
            "displayName": "[concat(variables('PIP'),'-',copyIndex())]"
        },
        "copy": {
            "name": "PIPcopy",
            "count": "[parameters('VMcount')]"
        },
        "properties": {
            "publicIPAllocationMethod": "Dynamic",
            "dnsSettings": {
                "domainNameLabel": "[toLower(concat(parameters('VMname'),'-',copyIndex()))]"
            }
        }
    },
    {
        "name": "[variables('BackendNSG')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2018-08-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "securityRules": [
                {
                    "name": "SSH",
                    "properties": {
                        "description": "SSH incoming",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "22",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }
            ]
        }
    },
        {
        "name": "[variables('FrontendNSG')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2018-08-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "securityRules": [
                {
                    "name": "HTTP",
                    "properties": {
                        "description": "HTTP Incoming",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "80",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }
            ]
        }
    },
    {
        "name": "[variables('VNET')]",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('BackendNSG'))]",
            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('FrontendNSG'))]"
        ],
        "tags": {
            "displayName": "[variables('VNET')]"
        },
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "10.0.0.0/16"
                ]
            },
            "subnets": [
                {
                    "name": "[variables('Backend')]",
                    "properties": {
                        "addressPrefix": "10.0.0.0/24",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('BackendNSG'))]"
                        }
                    }
                },
                {
                    "name": "[variables('Frontend')]",
                    "properties": {
                        "addressPrefix": "10.0.1.0/24",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('FrontendNSG'))]"
                        }
                    }
                }
            ]
        }
    },
    {
        "name": "[concat(variables('frntendNIC'),'-',copyIndex())]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', variables('VNET'))]",
            "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('PIP'),'-',copyIndex()))]"
        ],
        "tags": {
            "displayName": "[concat(variables('frntendNIC'),'-',copyIndex())]"
        },
        "copy": {
            "name": "frntendniccopy",
            "count": "[parameters('VMcount')]"
        },
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipConfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[concat(resourceId('Microsoft.Network/publicIPAddresses', variables('PIP')),'-',copyIndex())]"
                        },
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNET'), variables('Frontend'))]"
                        }
                    }
                }
            ]
        }
    },
    {
        "name": "[concat(variables('bkendNIC'),'-',copyIndex())]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2019-11-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', variables('VNET'))]",
            "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('PIP'),'-',copyIndex()))]"
        ],
        "tags": {
            "displayName": "[concat(variables('bkendNIC'),'-',copyIndex())]"
        },
        "copy": {
            "name": "bckendniccopy",
            "count": "[parameters('VMcount')]"
        },
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipConfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNET'), variables('Backend'))]"
                        }
                    }
                }
            ]
        }
    },
    {
        "name": "[concat(parameters('VMname'),'-',copyIndex())]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('bkendNIC'),'-',copyIndex()))]",
            "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('frntendNIC'),'-',copyIndex()))]"
        ],
        "tags": {
            "displayName": "[concat(parameters('VMname'),'-',copyIndex())]"
        },
        "copy": {
            "name": "VMloop",
            "count": "[parameters('VMcount')]"
        },
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('VMsize')]"
            },
            "osProfile": {
                "computerName": "[concat(parameters('VMname'),'-',copyIndex())]",
                "adminUsername": "[parameters('OSusername')]",
                "adminPassword": "[parameters('OSpassword')]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "16.04-LTS",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "[concat(parameters('VMname'),'-',copyIndex(),'-osdisk')]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('bkendNIC'),'-',copyIndex()))]",
                        "properties": {
                            "primary": true
                        }
                    },
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('frntendNIC'),'-',copyIndex()))]",
                        "properties": {
                            "primary": false
                        }
                    }
                ]
            },
            "diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('SAname'))).primaryEndpoints.blob]"
                }
            }
        }}
        ],
    "outputs": {}
}